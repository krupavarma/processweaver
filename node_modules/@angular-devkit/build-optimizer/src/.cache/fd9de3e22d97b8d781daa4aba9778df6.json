{"remainingRequest":"/home/krupavarma/Desktop/ppppppp/node_modules/@angular-devkit/build-optimizer/src/build-optimizer/webpack-loader.js??ref--8-1!/home/krupavarma/Desktop/ppppppp/node_modules/@angular/flex-layout/esm5/flex-layout.es5.js","dependencies":[{"path":"/home/krupavarma/Desktop/ppppppp/node_modules/@angular/flex-layout/esm5/flex-layout.es5.js","mtime":1535345528803},{"path":"/home/krupavarma/Desktop/ppppppp/node_modules/cache-loader/dist/cjs.js","mtime":1535345529087},{"path":"/home/krupavarma/Desktop/ppppppp/node_modules/@angular-devkit/build-optimizer/src/build-optimizer/webpack-loader.js","mtime":1535345528123}],"contextDependencies":[],"result":["/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** PURE_IMPORTS_START _angular_core,_angular_common,_angular_flex_layout_core,_angular_flex_layout_extended,_angular_flex_layout_flex,_angular_flex_layout_grid PURE_IMPORTS_END */\nimport { Version, Inject, NgModule, Optional, PLATFORM_ID } from '@angular/core';\nimport { isPlatformServer } from '@angular/common';\nimport { SERVER_TOKEN, LAYOUT_CONFIG, BREAKPOINT } from '@angular/flex-layout/core';\nexport { removeStyles, BROWSER_PROVIDER, CLASS_NAME, CoreModule, MediaChange, StylesheetMap, STYLESHEET_MAP_PROVIDER_FACTORY, STYLESHEET_MAP_PROVIDER, DEFAULT_CONFIG, LAYOUT_CONFIG, SERVER_TOKEN, BREAKPOINT, BaseDirective, BaseDirectiveAdapter, BaseFxDirective, RESPONSIVE_ALIASES, DEFAULT_BREAKPOINTS, ScreenTypes, ORIENTATION_BREAKPOINTS, BreakPointRegistry, BREAKPOINTS, MatchMedia, MockMatchMedia, MockMediaQueryList, MockMatchMediaProvider, ServerMediaQueryList, ServerMatchMedia, MediaMonitor, MEDIA_MONITOR_PROVIDER_FACTORY, MEDIA_MONITOR_PROVIDER, ObservableMedia, MediaService, ObservableMediaProvider, OBSERVABLE_MEDIA_PROVIDER_FACTORY, OBSERVABLE_MEDIA_PROVIDER, KeyOptions, ResponsiveActivation, StyleUtils, validateBasis } from '@angular/flex-layout/core';\nimport { ExtendedModule } from '@angular/flex-layout/extended';\nexport { ExtendedModule, ClassDirective, ImgSrcDirective, negativeOf, ShowHideDirective, StyleDirective } from '@angular/flex-layout/extended';\nimport { FlexModule } from '@angular/flex-layout/flex';\nexport { FlexModule, FlexDirective, FlexAlignDirective, FlexFillDirective, FlexOffsetDirective, FlexOrderDirective, LayoutDirective, LayoutAlignDirective, LayoutGapDirective } from '@angular/flex-layout/flex';\nimport { GridModule } from '@angular/flex-layout/grid';\nexport { ɵb, ɵc, ɵd, ɵe, ɵf, ɵg, ɵh, ɵi, ɵa, ɵj, ɵk, GridModule } from '@angular/flex-layout/grid';\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * Current version of Angular Flex-Layout.\n */\nvar /** @type {?} */ VERSION = /*@__PURE__*/ new Version('6.0.0-beta.17');\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * FlexLayoutModule -- the main import for all utilities in the Angular Layout library\n * * Will automatically provide Flex, Grid, and Extended modules for use in the application\n * * Can be configured using the static withConfig method, options viewable on the Wiki's\n *   Configuration page\n */\nvar FlexLayoutModule = /** @class */ /*@__PURE__*/ (function () {\n    function FlexLayoutModule(serverModuleLoaded, platformId) {\n        if (isPlatformServer(platformId) && !serverModuleLoaded) {\n            console.warn('Warning: Flex Layout loaded on the server without FlexLayoutServerModule');\n        }\n    }\n    /**\n     * Initialize the FlexLayoutModule with a set of config options,\n     * which sets the corresponding tokens accordingly\n     */\n    /**\n     * Initialize the FlexLayoutModule with a set of config options,\n     * which sets the corresponding tokens accordingly\n     * @param {?} configOptions\n     * @param {?=} breakpoints\n     * @return {?}\n     */\n    FlexLayoutModule.withConfig = /**\n     * Initialize the FlexLayoutModule with a set of config options,\n     * which sets the corresponding tokens accordingly\n     * @param {?} configOptions\n     * @param {?=} breakpoints\n     * @return {?}\n     */\n        function (configOptions, breakpoints) {\n            return {\n                ngModule: FlexLayoutModule,\n                providers: Array.isArray(breakpoints) ?\n                    configOptions.serverLoaded ?\n                        [\n                            { provide: LAYOUT_CONFIG, useValue: configOptions },\n                            { provide: BREAKPOINT, useValue: breakpoints, multi: true },\n                            { provide: SERVER_TOKEN, useValue: true },\n                        ] : [\n                        { provide: LAYOUT_CONFIG, useValue: configOptions },\n                        { provide: BREAKPOINT, useValue: breakpoints, multi: true },\n                    ]\n                    :\n                        configOptions.serverLoaded ?\n                            [\n                                { provide: LAYOUT_CONFIG, useValue: configOptions },\n                                { provide: SERVER_TOKEN, useValue: true },\n                            ] :\n                            [\n                                { provide: LAYOUT_CONFIG, useValue: configOptions },\n                            ]\n            };\n        };\n    return FlexLayoutModule;\n}());\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nexport { VERSION, FlexLayoutModule };\n//# sourceMappingURL=flex-layout.es5.js.map\n",null]}